Index: R-4.4.0/src/main/eval.c
===================================================================
--- R-4.4.0.orig/src/main/eval.c
+++ R-4.4.0/src/main/eval.c
@@ -2350,6 +2350,7 @@ static R_INLINE SEXP R_execClosure(SEXP call, SEXP new
     begincontext(&cntxt, CTXT_RETURN, call, newrho, sysparent, arglist, op);
 
     body = BODY(op);
+    #ifndef __EMSCRIPTEN__
     if (R_CheckJIT(op)) {
 	int old_enabled = R_jit_enabled;
 	R_jit_enabled = 0;
@@ -2357,6 +2358,7 @@ static R_INLINE SEXP R_execClosure(SEXP call, SEXP new
 	body = BODY(op);
 	R_jit_enabled = old_enabled;
     }
+    #endif
 
     /* Get the srcref record from the closure object. The old srcref was
        saved in cntxt. */
@@ -4555,6 +4557,10 @@ static SEXP R_ConstantsRegistry = NULL;
    instead of a weak reference, stays in the list forever, and is a GC root.*/
 static SEXP R_ConstantsRegistry = NULL;
 
+#ifdef __EMSCRIPTEN__
+#define NO_THREADED_CODE
+#endif
+
 #if defined(__GNUC__) && ! defined(BC_PROFILING) && (! defined(NO_THREADED_CODE))
 # define THREADED_CODE
 #endif
@@ -7504,6 +7510,13 @@ static SEXP bcEval_loop(struct bcEval_locals *);
      ! RSTEP(fun) && ! RDEBUG(rho) &&				\
      R_GlobalContext->callflag != CTXT_GENERIC)
 
+#ifdef __EMSCRIPTEN__
+/* Disable bytecode machine, significantly reduces Wasm binary size */
+static inline SEXP bcEval(SEXP body, SEXP rho)
+{
+  return eval(bytecodeExpr(body), rho);
+}
+#else
 static SEXP bcEval_loop(struct bcEval_locals *);
 
 static SEXP bcEval(SEXP body, SEXP rho)
@@ -8723,6 +8736,7 @@ static SEXP bcEval_loop(struct bcEval_locals *ploc)
     LASTOP;
   }
 }
+#endif
 
 #ifdef THREADED_CODE
 static void bcEval_init(void) {

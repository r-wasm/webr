---
title: "WebR - R in the Browser"
format: html
toc: true
---

WebR is a version of the statistical language [R](https://www.r-project.org/)
compiled for the browser and [Node.js](https://nodejs.org/en/) using
[WebAssembly](https://webassembly.org), via
[Emscripten](https://emscripten.org/).

WebR makes it possible to run R code in the browser without the need for an R
server to execute the code: the R interpreter runs directly on the user's
machine. Several R packages have also been ported for use with webR, and can be
[loaded in the usual way](packages.qmd) using the `library()` function.

::: callout-warning
The webR project is under active development, and the API is subject to change.
Be aware that if you are using the latest build of webR the contents of this
documentation might be out of date.
:::

## Try it out

### WebR REPL

Try a [demo of the webR REPL](https://webr.r-wasm.org/latest/) directly in your web
browser, no installation required!

### Interactive R code editor

```{=html}
<button class="btn btn-success btn-sm" disabled type="button" id="runButton">Loading webR...</button>
<div id="editor"></div>
<pre><code id="out"></code></pre>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/codemirror.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/codemirror.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/mode/r/r.js"></script>
<script type="module">
  const editor = CodeMirror((elt) => {
    elt.style.border = '1px solid #eee';
    elt.style.height = 'auto';
    document.getElementById('editor').append(elt);
  },{
    value: 'fit <- lm(mpg ~ am, data=mtcars)\nsummary(fit)',
    lineNumbers: true,
    mode: 'r',
    theme: 'light default',
    viewportMargin: Infinity,
  });
  import { WebR } from 'https://webr.r-wasm.org/v0.1.0/webr.mjs';
  const webR = new WebR();
  await webR.init();
  const shelter = await new webR.Shelter();

  async function runR() {
    let code = editor.getValue();
    const result = await shelter.captureR(code, undefined, {
      withAutoprint: true,
      captureStreams: true,
      captureConditions: false
    });
    try {
      const out = result.output.filter(
        evt => evt.type == 'stdout' || evt.type == 'stderr'
      ).map((evt) => evt.data);
      document.getElementById('out').innerText = out.join('\n');
    } finally {
      shelter.purge();
    }
  }
  document.getElementById('runButton').onclick = runR;
  document.getElementById('runButton').innerText = 'Run code';
  document.getElementById('runButton').disabled = false;

</script>
```
## Useful links

-   WebR on GitHub: <https://github.com/georgestagg/webR/>
